<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
"http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
    <title>AppleScript Spell-checker</title>
  </header>

  <body>
    <p>The possibility to use an <a
    href="http://www.apple.com/macosx/features/applescript/">AppleScript</a>
    to drive the spell checker in MS Word is now documented as part of the
    regular <a href="howtotest.html">automated testing documentation</a>. The
    applescript itself is found in
    <code>gt/script/spellcheckWithMSWord.applescript</code>. Below follows a
    short description of how to run the applescript stand-alone, its input
    parameters and data, and the output data.</p>

    <section>
      <title>Running the applescript</title>

      <p>The script takes the following three input parameters:</p>

      <dl>
        <dt>LANGUAGE code</dt>

        <dd>a three-letter language code identifying the language of the text
        to be proofread. The codes are automatically mapped to the
        corresponding language identifiers used by MS Word. The following
        codes are recognised:<ul>
            <li>sme (in MS Word this equals Catalan)</li>

            <li>smj (in MS Word this equals Basque)</li>

            <li>nob</li>

            <li>nno</li>

            <li>swe</li>

            <li>fin</li>

            <li>isl</li>

            <li>dan</li>

            <li>eng</li>

            <li>ger</li>

            <li>deu</li>
          </ul></dd>

        <dt>INPUT file</dt>

        <dd>The text to be proofread. It must be encoded in UTF-16. Presently
        the script expects the text to be preprocessed and filtered, such that
        all words are on one line, and words containing any of <code>[-.:
        ]</code> are removed (these chars "breaks" the input strings into
        separate "words" in MS Word - it might be possible to work around, but
        it isn't worth the effort right now.</dd>

        <dt>OUTPUT file</dt>

        <dd>The result of the spell-check is stored in this file, in a format
        described below. The output is as well encoded in UTF-16.</dd>
      </dl>

      <p>It is necessary to run the script from a local terminal session, for
      the script to be able to open MS Word in the graphical UI of MacOS
      X.</p>

      <p>The actual command to run the script should be something like:</p>

      <source>osascript script/spellcheckWithMSWord.applescript sme InFile OutFile</source>

      <section>
        <title>Remarks on language codes</title>

        <p>In the standard distribution in the Nordic countries, proofing
        tools for more languages than listed above is installed (and there are
        no tools for Icelandic). It should be easy to expand the list to cover
        all tools installed, or even all languages recognised by MS Word. This
        is left as an exercise for the future.</p>
      </section>
    </section>

    <section>
      <title>Format of the output file</title>

      <p>The output file is a TAB-delimited text file of the following
      format:</p>

      <source>InputWord&lt;TAB&gt;SpellerStatus&lt;TAB&gt;Suggestions</source>

      <p>The suggestions are themselves TAB-separated.</p>

      <p>The SpellerStatus field can have two values:</p>

      <dl>
        <dt>SplCor</dt>

        <dd>The speller thinks that the input is correct</dd>

        <dt>SplErr</dt>

        <dd>The speller thinks that the input is incorrect, ie a
        misspelling</dd>
      </dl>
    </section>

    <section>
      <title>The AppleScript</title>

      <p>Here follows a simple pseudocode of the AppleScript. See the source
      file for the gory details.</p>

      <ol>
        <li>First we setup input and output files</li>

        <li>Then the language code is mapped to the corresponding language
        constant in MS Word (the constants have the form of strings, like
        <em>norwegian bokmol</em>), and the whole document is set to that
        language</li>

        <li>Then, for each word in the input document:<ol>
            <li>ask for its spelling status</li>

            <li>print out the result from the speller, together with any
            suggestions</li>
          </ol></li>
      </ol>
    </section>

    <section>
      <title>Testing other languages</title>

      <p>Since the applescript does not rely on any specific spelling engine,
      but is just querying MS Word for the spelling status of individual
      words, it is possible to test any language for which there is an
      installed speller.</p>

      <p>Among other things, this makes it possible to compare the spellers of
      different languages, both from the same vendor and from different
      vendors, given that the test documents share sufficiently similar
      spelling error characteristics.</p>
    </section>

    <section>
      <title>Limitations</title>

      <p>Although the applescript option provides the benefit of being speller
      engine independent, it has its limitations.</p>

      <section>
        <title>Speed</title>

        <p>Scripting the speller in MS Word is slow, even more so as MS Word
        2004 is not running natively on the latest and greatest Intel
        Macs.</p>
      </section>

      <section>
        <title>Input data</title>

        <p>Because of Word's built-in string segmentation in its AppleScript
        implementation, some possible input words are not feasible test data.
        This is very unfortunate, since it means that the scripted speller
        behaves differently from the interactive speller for some types of
        input. This is at least true for the following chars:</p>

        <source>- (hyphen)
: (colon)
. (full stop)</source>

        <p>Technically it means that Word's definition of a word in
        AppleScript is different from what it is when used interactively.
        Basically, the above characters are considered non-word chars, and
        will split strings containing them into separate words on each side of
        the chars. In practice, this means that we can't meaningfully test
        words of the type:</p>

        <source>CD:s (in/on the CD)
TV-stasjåvnnå (TV station)
cand.phil.</source>

        <p>Since including such words in the test data will just destroy the
        test results, they are removed before the test is run. The test result
        is because of this not completely covering all cases, but removing
        such words is better than destroying the test results.</p>
      </section>

      <section>
        <title>Platform dependence</title>

        <p>Because we are using AppleScript, it only runs on the Mac. But the
        underlying AppleScript implementation in Word is based on VisualBasic
        (VB), and is very close to the VB scripting found in Word for Windows.
        It should thus be relatively straightforward for someone knowing VB to
        port this script to run on Windows using VB.</p>
      </section>
    </section>
  </body>
</document>