!!!Building hfst-based spellers

A step-by-step guide.

!!!Building a basic error correction transducer

Use the python script found in the folder {{hfst-ospell/test/}} to build an initial error model. Later on we can refine this one, and experiment with other types of corrections in addition to or on top of this basic model. The model generated below is a simle edit-distance 1 correction model, including swaps. The alphabet used is the {{sme}} alphabet.

{{{
$ cd $HFSTHOME/hfst-ospell/
$ test/editdist.py -s -v \
    aábcčdđefghijklmnŋopqrsštŧuvwxyzžæøåöäAÁBCČDĐEFGHIJKLMNŊOPQRSŠTŦUVWXYZŽÆØÅÖÄ \
    > edit-dist-1-w-swap.hfst.txt
hfst-txt2fst edit-dist-1-w-swap.hfst.txt -w -e @0@ | hfst-lookup-optimize \
    > edit-dist-1-w-swap.hfst.ol
}}}

Notes:
* {{$HFSTHOME}} is not a real variable, it just designates your svn co root of the hfst source code
* please use a descriptive filename for the error correction model

!!!Building the acceptance transducer

Pseudocode:
* build a weighted, normative transducer
* throw away the upper (analysis) side of it, making it one-level

!!!How to run the speller

{{{
cat typos.txt | ./hfst-ospell -v edit-dist-1-w-swap.hfst.ol sme.single.whfst.ol | l
}}}
