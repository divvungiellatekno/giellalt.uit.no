
This page documents both lexicon and fst updating, and restarting of the server.
One may update either lexica or fst or both, but in both cases configuring and
resetting of the surver must be run.

!!!Updating the lexica
 
NB: Neahttadigisánit (sme, sma, etc.) or sanit.oahpa.no/sánit.oahpa.no is
currently on gtoahpa, but other services are located on gtweb: sanat.oahpa.no,
valks.oahpa.no. For these you will need to log into gtweb, though the following
examples may show gtoahpa as the hostname in the command prompt

1.) ''Log in to the server via SSH as your own user account''

2.) ''Switch to the NDS user account.''
 
Note that when logged in as the NDS user, the python virtualenv should be
activated automatically, and you will see this before the command prompt:

{{{
	$ sudo su neahtta
	(env)[neahtta@gtweb ~]$ 
}}}

(If this procedure is not available, do the following commands from the home directory of
neahtta: ''cd ~ && source env/bin/activate''.)

When you see (env) in the command prompt, continue.

3.) ''Go to the gtsvn catalogue and update the files from svn''

{{{
	cd ~/gtsvn/ && svn up words langs
}}}
 
4.) ''Then, go to the dicts catalogue.''


{{{
	cd ~/neahtta/dicts/ 
}}}

5.) ''Then, compile the dictionaries.''

Replace DICT below with sanat, vada, etc (to ''make vada-lexica'' etc.)

{{{
	make DICT-lexica
}}}

Possible DICTs are: baakoeh, erey, kyv, muter, pikiskwewina, saan, sanat, sanit, vada, valks.

6.) ''Check that there were no errors, also wc -l *.xml to make sure there is content in the files.''

If there is an error in an XML file, Saxon will print out the file name
and line that was problematic.
 
Also, sometimes it's a good idea to run the interactive shell with the
app, just to make sure that all of the files are able to be parsed with
no errors before restarting the actual production service.

This ''Makefile'' process naturally results in files ending up in
''dicts/'', which is the place that the app looks for dictionaries,
following the relevant configuration file in ''configs/DICT.config.yaml''. This
will usually be enough, but if updates do not seem to be visible on the web, it
is a good idea to check that the dictionaries are in the locations that the
config expects, and alternatively restarting the server process.

!!!Updating the fsts

There are two ways to update the FSTs. For both of these options, you must 
know first where the FSTs for each dictionary and language should lie.
FST locations are defined in the relevant config file in
''configs/DICT.config.yaml'', in the ''Morphology'' section near the top.

A handy tool is availble to do this automatically, from ''~/neahtta/'', which
will evaluate the config, test dictionaries, and then print FST paths and last
updated date. If an FST is missing from its expected path, it will be listed as
such: 

{{{
    NDS_CONFIG=configs/DICT.config.yaml python manage.py chk-fst-paths
}}}

The first way to update FSTs is to do so on your own, using whichever method
you are comfortable with, typically following the usual procedure for
''$GTSVN/langs/'', and then copying them manually to the specified locations.

For convenience, the ''Makefile'' also contains compilation and install
targets, which assume a specific type of configuration. You may easily compile
these using the following commands, however installing them to the paths
defined in ''DICT.config.yaml'' may require ''sudo'' privileges. If you are
logged in as the ''neahtta'' user, you may be out of luck, because this user
has no ''sudo'' permissions for security purposes. In any case, this will also
allow for developers to test the build process.

Compiling FSTs with the ''Makefile'' is as follows: you can compile all FSTs
individually with ''make ISO'', where ISO is the ISO for the language, or
''make DICT'' where DICT is the short name for the project. This will compile
all FSTs belonging to the DICT together.

{{{
    make DICT
    make ISO
}}}

Either of these will compile the FSTs in their original locations as defined in
the ''Makefile'' (which simply follows the procedures for ''$GTSVN/langs''),
but it will also copy FST files to temporary locations within the dictionary
config directory as a prerequisite to the install targets.

!!!Configuring the dictionary + fst

''Go to neahtta and configure the dictionaries''

{{{ 
	cd ~/neahtta/ ; NDS_CONFIG=configs/DICT.config.yaml python manage.py shell 
}}}

Here, replace DICT with the relevant name in configs/ that you are working on (the list of DICTs above). For example:

{{{
	NDS_CONFIG=configs/sanat.config.yaml python manage.py shell
}}}
 
If everything is good and there are no errors, you'll see the python
command prompt. 

!!!Resetting the server

''Exit sudo mode, and restart the service (as yourself).''

__On gtweb (sanat, valks...):__

''First stop...''

{{{ 
	sudo systemctl stop nds-DICT.service 
}}}

Replace DICT with the relevant service name sanat etc.
(see above for a list). For example:

{{{
	sudo systemctl stop nds-sanat.service 
}}}

''... then restart'' (again with ''sanat'' as an example)

{{{ 
	sudo systemctl start nds-sanat.service
}}}

Two dictionaries (sanit, baakoeh) are on gtoahpa. Here, the 
command is __different__.

The command is not ''systemctl'', but ''service''.
The command is thus (with either sanit or baakoeh:

{{{
	sudo service nds-sanit stop
	sudo service nds-sanit start
}}}

 
The reason this is done in two separate steps is just to make sure
everything has come down before starting it up again. Usually advisable
to watch top.


!!! More comments on the CENTOS (gtoahpa) operative system

In order to start with reboot on CENTOS:

{{{
	chkconfig --list  (list all)
	chkconfig SERVICE on
}}}

where __SERVICE__ is a variable for nds-sanit.service, etc.

