

Here we add useful commands.

!!!MT commands

echo "Nu lea." | apertium -d . sme-smn

The program actually goes through 9 steps
in order to make the translation 
(cf. [the picture|http://wiki.apertium.org/wiki/Apertium_for_Dummies],
if you are a visual person).

In order to see what goes on, we may stop on any of the 9 steps:

# sme-smn-morph		   <=== full morphology
# sme-smn-disam		   <=== morphological disambiguation
# sme-smn-syntax	   <=== syntactical disambiguation
# sme-smn-biltrans	   <=== includes bidix
# sme-smn-lextor	   <=== lexical selection
# sme-smn-chunker	   <=== t1x transfer rules
# sme-smn-interchunk   <=== t2x transfer rules
# sme-smn-postchunk	   <=== tx3 transfer rules
# sme-smn              <=== full MT
# sme-smn-dgen              <=== debugging-generation
# sme-smn-debug              <=== debugging

We thus write {{echo "Nu lea." | apertium -d . sme-smn-morph}}
etc. instead.

[Here is the documentation for these modes|http://wiki.apertium.org/wiki/Modes]	

!!!Running the regression test

Write:

t/update-latest
t/regression-test

Cf. also [the documentation|https://github.com/unhammer/apertium-wiki-tests].


!!!Morphological analysis and generation

How to use the MT analysers and generators
__automorf__ (for analysis) and __autogen__ (for generation)


{{{
Analyse North Saami:
echo ja|hfst-proc -a sme-smn.automorf.hfst
^ja/ja<cnjcoo>$

Generate North Saami:
echo '^ja<cnjcoo>$'|hfst-proc -d sme-smn.autogen.hfst
ja

Analyse Inari Saami:
echo já|hfst-proc -a smn-sme.automorf.hfst
^já/já<cnjcoo>$

Generate Inari Saami:
echo '^já<cnjcoo>$'|hfst-proc -d sme-smn.autogen.hfst
já
}}}

