<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
"http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
    <title>Error markup</title>
  </header>

  <body>
    <p>We want to extend (some of) the corpus files with markup for spelling
    and other errors, to use them as gold standards for testing our spellers
    (and in the future other tools as well). The markup is done manually, and
    needs to follow certain rules.</p>

    <section>
      <title>Markup TYPES</title>

      <p>We differentiate between different types of errors that people make,
      depending on the type of analysis needed to detect and correct the
      error. We also use the annotation for errors in learner texts.</p>

    <section>
      <title>Unclassified errors - wrong§correct</title>



        <p>Errors of unknown type. By default such errors will be treated as
        spelling errors (see below). In the resulting xml, the name of the element will be &lt;error&gt;.</p>
</section>
<section>
<title>Orthographic errors - wrong$(pos,errtype|correct)</title>


        <p>Traditional misspellings confined to single (error) strings, that
        is, errors that don't need an analysis of the surrounding words to be
        detected and corrected. In the resulting xml, the element is named &lt;errorort&gt;.</p>
<dl>        
        <dt>Attributes:</dt>
		<dd><strong>pos</strong> ( noun | verb | adj | adv | num | interj | pp | cc | cs | pers | refl | dem | resip | indef | pcle | prop | typo | x )<br />
        <strong>errtype</strong> ( a | á | conc | svow | vowc | vow | con | mono | diph | lime | meta | suf | cmp  | ascii | typo | cap | min | mix)</dd>
        
        <dt>Some explanations:</dt>
<dd>
a = should be a instead of á <br />
á = should be á instead of a <br />
conc = consonant centre										 <br />
vowc = vowel centre											 <br />
svow = soggevokála											 <br />
vow = some other wrong vowel <br />
con = some other wrong consonant <br />
mono = diphthong, but should be monophtong					 <br />
diph = wrong diphthong										 <br />
lime = consonant between two unstressed syllables, <em>vuovddášis</em> vs <em>vuovddážis</em> <br />
meta = metathesis												 <br />
suf = wrong suffixing, e.g. <em>gievkani</em> vs. <em>gievkkanii</em>			 <br />
cmp = incorrect compounding, e.g. <em>beavdiguorra</em> vs <em>beavdeguorra</em> <br />
ascii = not used sámi letter								 <br />
typo = typical typo											 <br />
cap = should be capital letter								 <br />
min = should be minuscle									 <br />
mix = more than one errortype in the same word </dd>
</dl>        

</section>
<section>
<title>Morphosyntactic errors - (context wrong)£(pos,gf,cat,orig,errtype|context correct)</title>


        <p>Errors that require an analysis of (parts of) the
        sentence or surrounding words to be detected and corrected. 
         In the resulting xml, the element is named &lt;errormorphsyn&gt;.</p>
<dl>        
        <dt>Attributes:</dt>
<dd><strong>pos</strong> ( noun | verb | adj | adv | num | interj | pp |  cc | cs | pcle | prop |pers | refl | dem | resip | indef | x )<br />
<strong>gf</strong> ( subj | obj | advl | fin | infin | spred | opred  | pcle  | interj | app | conj | pph | x | attr )<br />
<strong>cat</strong> ( nomsg | nompl | gensg | genpl | illsg | illpl | locsg | locpl | comsg | compl | ess | sg1prt | sg2prt | sg3prt | du1prt | du2prt | du3prt | pl1prt | pl2prt | pl3prt | sg1prs | sg2prs | sg3prs | du1prs | du2prs | du3prs | pl1prs | pl2prs | pl3prs | attr | pred | word | comp | superl | cmp | imprt | pot | infinite | cond | conneg | ger | vgen | x )<br />
<strong>orig</strong> ( nomsg | nompl | gensg | genpl | illsg | illpl | locsg | locpl | comsg | compl | ess | sg1prt | sg2prt | sg3prt | du1prt | du2prt | du3prt | pl1prt | pl2prt | pl3prt | sg1prs | sg2prs | sg3prs | du1prs | du2prs | du3prs | pl1prs | pl2prs | pl3prs | attr | pred | word | comp | superl | imprt | pot | infinite | cond | conneg | ger | vgen | x )<br />
<strong>errtype</strong> ( agr | case | tense | mode | number | mix | x  )</dd>

        <dt>Some explanations:</dt>

<dd>
gf = grammatical function <br />
subj = subject <br />
fin = finite verb		 <br />
infin = infinite verb		 <br />
obj = object	 <br />
spred = subjectpredicative 	 <br />
opred = objectpredicative 	 <br />
advl = adverbial, e.g. <em> Mun boađán 'sotnabeaivi'</em>  vs. <em> Mun boađán 'sotnabeaivve'.</em> 	<br />
pph = pp phrace, e.g. <em>sullo guovdu</em>  vs. <em>guovdu sullo</em>	 <br />
conj = conjunction/subjunction	 <br />
pcle = particle 	 <br />
interj = interjection	 <br />
app = apposition 	 <br />
attr = attribute	 <br />
x = unknown		 <br />

nump = numeral phrase	<br />
gensg = acc/gen sg<br />
genpl = acc/gen pl</dd>

</dl>        

</section>
<section>
<title>Syntactic errors - (context wrong)¥(pos,errtype|context correct)</title>
        
        <p>Also these errors require a partial or full analysis of (parts of) the
        sentence or surrounding words to be detected and corrected. 
         In the resulting xml, the element is named &lt;errorsyn&gt;.</p>
<dl>        
        <dt>Attributes:</dt>
<dd><strong>pos</strong> ( noun | verb | adj | adv | num | interj | pp |  cc | cs | pcle | prop | pers | refl | dem | resip | indef | punct | x )<br />
<strong>errtype</strong> ( wo | pph | redun | missing | cmp | x )</dd>

<dt>Some explanations:</dt>
<dd>
wo = word order			<br />
pph = pp-phrase			<br />
redun = redundant word <br />
missing = missing word, or punctation when it is crucial for the interpretation <br />
cmp = should be compound<br />
x = unknown		 </dd></dl>        


</section>
<section>
<title>Lexical errors - (wrong)€(pos,errtype|correct)</title>
        
        <p>Errors where the real error is only in the chosen word used, that
        is, another word would be better or correct; to be able to detect and
        correct such errors, we need in addition to syntactic analysis also a
        dictionary component with sufficiently rich syntactic and semantic
        markup of the entries, as well as syntactic and semantic
        disambiguation. The possibility to detect and correct this type of
        errors is probably not in the nearest future, but the need to mark up
        texts for these errors is real now. In the resulting xml, the element is named &lt;errorlex&gt;.</p>
<dl>
        <dt>Attributes:</dt>
<dd><strong>pos</strong> ( noun | verb | adj | adv | num | interj | pp |  cc | cs | pcle | prop | pers | refl | dem | resip | indef | x )		   <br />
<strong>orig</strong> ( noun | verb | adj | adv | num | interj | pp |  cc | cs | pcle | prop | pers | refl | dem | resip | indef | x )<br />
<strong>errtype</strong> ( der | w | foreign | x  )   						</dd>

<dt>Some explanations:</dt>
<dd>
der = wrong derivation <br />
w = wrong word			<br />
foreign = foreign word <br />
x = unknown		 </dd>
</dl>        



</section>
<section>
<title>Nesting</title>

      <p>The three types can be nested, with the spelling error being the
      innermost one. That is, the following nesting is allowed:
      <code>syntactic &gt; morphosyntactic &gt; lexical &gt; spelling</code>.</p>

      <p>Parentheses are used to identify the range of the
      error. When nesting error markup, parentheses are
      required. Parentheses are also required when the
      error is followed by punctuation that is not part of the error or
      correction - the parenthesis will make sure the punctuation stays outside
      the error correction markup.</p>
    </section></section>

    <section>
      <title>Markup EXAMPLES</title>

      <p>Here are some examples of error/correction markup and how they are converted to xml:</p>

		<source>nourra$(a,meta|nuorra)
		
&lt;errorort pos="n" errtype="meta" corr="nuorra"&gt;nourra&lt;/errorort&gt; </source>

<source>(Nieiddat leat nuorra)£(a,spred,nompl,nomsg,agr|Nieiddat leat nuorat).

&lt;errormorphsyn pos="a" gf="spred" cat="nompl" orig="nomsg" errtype="agr" corr="Nieiddat leat nuorat"&gt;
Nieiddat leat nuorra&lt;/errormorphsyn&gt;.</source>

<source>Mun (riŋgen nieidda lusa)¥(x,pph|riŋgen niidii) ihttin.

Mun &lt;errorsyn pos="x" errtype="pph" corr="riŋgen niidii"&gt;riŋgen nieidda lusa&lt;/errorsyn&gt; ihttin.</source>

<source>Son lei ovtta¥(num,redun| ) viesus.

Son lei &lt;errorsyn pos="num" errtype="redun" corr=""&gt;ovtta&lt;/errorsyn&gt; viesus.</source>


<source>Mun barggan nu dábálaš€(adv,adj,der|dábálaččat).

Mun barggan nu &lt;errorlex pos="adv" orig="adj" errtype="der" corr="dábálaččat"&gt;dábálaš&lt;/errorlex&gt;.</source>


<p>Nesting:</p>
<source>(Nieiddat leat nourra$(adj,meta|nuorra))£(adj,spred,nompl,nomsg,agr|Nieiddat leat nuorat).

&lt;errormorphsyn pos="adj" gf="spred" cat="nompl" orig="nomsg" errtype="agr" corr="Nieiddat leat nuorat"&gt;
Nieiddat leat &lt;errorort pos="adj" errtype="meta" corr="nuorra">nourra&lt;/errorort>&lt;/errormorphsyn&gt;.</source>


<source>Mus leat (guokte (ganddat§(n,á|gánddat)£(n,nump,gensg,nompl,case|guokte gándda)).
  
Mus leat &lt;errormorphsyn pos="n" gf="nump" cat="gensg" orig="nompl" errtype="case" corr="guokte gándda"&gt;
guokte &lt;errorort pos="n" errtype="á" corr="gánddat">ganddat&lt;/errorort>&lt;/errormorphsyn&gt;.</source>


<source>
Mus (leat (okta máná£(n,spred,nomsg,gensg,case|okta mánná))£(v,v,sg3prs,pl3prs,agr|leat okta mánná).

Mus &lt;errormorphsyn pos="v" gf="v" cat="sg3prs" orig="pl3prs" errtype="agr" corr="leat okta mánná"&gt;
leat &lt;errormorphsyn pos="n" gf="spred" cat="nomsg" orig="gensg" errtype="case" corr="okta mánná">
okta máná&lt;/errormorphsyn>&lt;/errormorphsyn&gt;.</source>


<!--      <source>muitlat§muitalat
{mun muitalat}£{mun muitalan}
guossodimieddne€biebbmoieddne</source>

      <p>And some more complex examples with nesting:</p>

      <source>{mun (muitlat§muitalat)}£{mun muitalan}
(guossodmieddne§guossodimieddne)€biebbmoieddne</source> -->
    </section>

    <section>
      <title>Markup RULES</title>

      <p>The following rules should be followed when marking up texts:</p>

      <ol>
        <li><strong>The correction is always done in the original format -
        never in the xml file!</strong> That is, make a copy of the original
        <code>doc</code>, <code>txt</code> or <code>html</code> file, and name
        it <code>corr.doc</code>, <code>corr.txt</code>, or
        <code>corr.html</code>, and add the correction markup in this new
        file. This will create a "new" original, which is identical to the
        "real" original, except for the additional correction markup. The
        "new" original will be converted to xml by the script
        <code>convert2xml.pl</code>, which is run automatically every night.
        Corrections done to the converted xml files will be lost upon next
        conversion.</li>

        <li><strong>$ is the spelling correction mark</strong> - use it
        directly after the wrongly spelled word, followed by the correction,
        as in error$correction. Example: <em>volvo$Volvo</em>. NB! there
        should be <strong>NO space</strong> on either side of the correction
        mark $.</li>

        <li><strong>skip foreign text</strong> - we assume that text in other
        languages are properly detected, or manually marked in the xsl file.
        That is: DON'T add spelling error markup to passages in Norwegian -
        instead, try to enforce or add xml markup designating the passage as
        being in Norwegian. Single words used as part of a sami sentence (in
        situ loans), should NOT be marked, either, since we can't know what
        the correction should be (and in principle the word isn't a
        misspelling if it is correctly spelled Norwegian).</li>

        <li><strong>enclose multiword corrections in parenthesis</strong> -
        since the conversion to xml needs a way of knowing where the
        correction ends, we need to tell it if it is not at the end of the
        first word after the correction symbol. Example:
        <em>Norggabealde§(Norgga bealde)</em></li>

        <li><strong>separate punctuation that is not part of the
        correction</strong> with a space, or use parentheses around the
        correction. Example: "<em>buolasta§(buolašta).</em>" or
        "<em>buolasta§buolašta .</em>" (the example text is the text within
        the quotes, <strong>including</strong> the punctuation).</li>

        <li><strong>remember the case</strong> - the correction should have
        the same case pattern as the spelling error. Example:
        <em>Mannjá§Maŋŋá</em>, <strong>NOT</strong> <em>Mannjá§maŋŋá</em>
        (note the case of the initial letter). The exception is of course when
        the error is missing capitalisation, as in names spelled lower case,
        etc.</li>

        <li><strong>always provide a correction!</strong> The markup is
        useless if it isn't complete.</li>

        <li><strong>Both</strong> the <strong>untouched original</strong> and
        the <strong>corrected "original"</strong> should be stored in
        <code>$CORPUSHOME/prooftest/orig/$LANG/$GENRE/</code>. The converted
        xml file(s) will be found in
        <code>$CORPUSHOME/prooftest/$CONTRACT/$LANG/$GENRE/</code>. It is
        important that the untouched original is also stored in the
        <code>prooftest/</code> hierarchy, otherwise it can easily be included
        when making new missing lists, which means that the coverage testing
        will become misleading without us noticing it.</li>
      </ol>
    </section>

    <p>By following these guidelines the resulting files should be readily
    useable for (speller) testing, as soon as they are converted to xml.</p>
  </body>
</document>