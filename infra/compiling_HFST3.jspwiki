__NB!__ The information below is up-to-date as of __HFST 3.8.1__.

Presently, HFST3 supports three different backends, all enabled by default:
* __OpenFST__ - weighted transducers (''default'')
* __Foma__ - xfst-compatible lexc and regex compiler, xfst
  scripts (''optional'')
* __SFST__ - unweighted transducers, fast substitute (''optional'')

HFST3 abstracts over the different backends, and will make it easy to add
support for new backends in the future, to support even more FST source code and
transducer conversion options.

!!!Checkout and configuration

We assume installation from svn here. If you have downloaded a tarball from
[sourceforge|https://sourceforge.net/projects/hfst/files/latest/download?source=files],
unzip and untar, and go directly to the {{./configure}} step.

{{{
svn co http://svn.code.sf.net/p/hfst/code/trunk/hfst3
cd hfst3/
./autogen.sh
./configure --enable-all-tools --with-unicode-handler=glib
}}}

The configuration above is the default. To check what other options there are,
do {{./configure --help}}.

The Foma backend is not used by the Giella infrastructure, and whether you
build with or without it is up to you. For license compatibility issues it
can be wise to build without it (use {{--without-foma}} to achieve this).

To avoid the very wordy output of {{make}}, and get only essential messages,
add the following {{./configure}} option:

{{{
--enable-silent-rules
}}}

!!Special configuration on MacOSX 10.9

Due to a new default compiler on MacOSX 10.9 (with which the hfst code
- presumably the openfst backend - is not compatible), one needs additional
configuration flags. Try one of these:

{{{
./configure --without-foma --with-unicode-handler=glib --enable-all-tools \
            LDFLAGS=" -stdlib=libstdc++"
}}}

Or:

{{{
./configure --without-foma --with-unicode-handler=glib --enable-all-tools \
            CXXFLAGS="Â -stdlib=libstdc++" LDFLAGS=" -stdlib=libstdc++"
}}}

Or:

{{{
./configure --without-foma --with-unicode-handler=glib --enable-all-tools \
            CXXFLAGS="-I/usr/include/c++/4.2.1" LDFLAGS=" -stdlib=libstdc++"
}}}

__NB!__ Remember to {{make clean}} after each {{./configure}} run, and before
you {{make}}

__NB2!__ This does NOT apply to MacOSX 10.10 - in this case, just configure
without any extra flags, as described earlier. This might be because the hfst
build instructions are improved, or because of changes in Apple's compilers. If
it is because of changes in the Hfst code base, the above workaround is probably
obsolete also on MacOSX 10.9, but this needs to be tested.

!!!Make and install

The final steps to build and install {{hfst}} after the configuration are as
follows (the script to generate {{.cc}} files may only be required on some
systems, but does no harm):

{{{
./scripts/generate-cc-files.sh
make
sudo make install
}}}

!!!Extra preparations on MacOSX 10.6

When building from the subversion source code,
OSX 10.6 and earlier requires newer versions of {{automake}} and {{autoconf}}
than provided by the system, and {{hfst-ospell}} requires {{pkg-config}} to
configure. Also the {{flex}} and {{bison}} versions installed breaks {{hfst}}
compilation. Ensure you have MacPorts installed, then do the following
__before anything else__:

{{{
sudo port install automake autoconf flex bison pkgconfig
}}}

After this, do {{./autogen.sh}} etc. as above.
