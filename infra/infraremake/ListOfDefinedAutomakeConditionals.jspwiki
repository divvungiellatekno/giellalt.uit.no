This is a list of presently defined Automake conditionals in our infrastructure.
They can be used to enable / disable build steps such as testing and enabling or
disabling build targets depending on the user's configuration.

; WANT_MORPHOLOGY : --enable-analysers, default=yes\\
                    Used to enable the default set of analysers, which is:
                    {{analyser-gt-desc.xfst}}, {{analyser-gt-norm.xfst}} and
                    {{analyser-disamb-gt-desc.hfst}}
; WANT_GENERATION : --enable-generators, default=yes\\
                    Used to enable the default set of generators, which is:
                    {{generator-gt-desc.xfst}} and {{generator-gt-norm.xfst}}
; WANT_TRANSCRIPTORS : --enable-transcriptors, default=yes 
; WANT_SPELLERS : --enable-spellers, default=no
; WANT_SPELLERAUTOMAT : --enable-spellerautomat, default=no
; WANT_VOIKKO : --enable-voikko, default=no 
; WANT_HUNSPELL : --enable-hunspell, default=no
; WANT_FST_HYPHENATOR : --enable-fst_hyphenator, default=no
; WANT_GRAMCHECK : --enable-grammarchecker, default=no
; WANT_DICTIONARIES : --enable-dicts, default=no
; WANT_OAHPA : --enable-oahpa, default=no
; WANT_PHONETIC : --enable-phonetic, default=no
; WANT_APERTIUM : --enable-apertium, default=no

Example of how to use them:

{{{
if WANT_MORPHOLOGY
GT_ANALYSERS_HFST+=analyser-gt-desc.hfst \
				   analyser-gt-norm.hfst \
				   analyser-disamb-gt-desc.hfst
endif # WANT_MORPHOLOGY
}}}

This ensures that we build Hfst analysers only if the user has enabled
analysers. Analysers are enabled by default, so the usefulness of this is rather
the oposite: the user can explicitly ''disable'' analysers, e.g. to speed up
compilation time when building spellers. In that case, the conditional will
make sure that the analysers are ''not'' built.
