!!!Language technology for low-resource languages

Jack Rueter and Sjur Moshagen

!!!Rule-based language technology

Our rule-based approach:
* two-level morphology (finite state transducers)
* disambiguation using constraint grammar

Both technologies developed here at HU :-)

!!Word-level technology

* Morphophonology:
** twolc (a "variant" of SPE phonology)
** also rewrite rules ("real" SPE phonology)
* Morphology: lexc

Both formalisms should be easily recognisable by linguists.

!Example — twolc

{{{
Alphabet m p ;

Rules

"N:m rule"
N:m <=>  _ p: ;

"p:m rule"
p:m <=> :m _  ;
}}}

Target changes:

{{{
kaNpat
kammat
}}}

!Example — rewrite rules

The same changes written using rewrite rules:

{{{
[ N -> m || _ p ]
.o.
[ p -> m || m _ ];
}}}

Rewrite rules are ordered, twolc rules are not.

!Example — lexc

A very simplistic English lexicon:

{{{
Multichar_Symbols
+V +Pres +3Sg +PresPtc +Past

! Lexicon containing lexical stems:
LEXICON Root
 walk V ;
 talk V ;
 pack V ;

! Lexicon containing POS tag only:
LEXICON V
 +V: V-suff ;

! Lexicon containing inflectional suffixes and corresponding tags:
LEXICON V-suff
 +Pres+3Sg:s   # ;
     +Past:ed  # ;
  +PresPtc:ing # ;
     +Pres:    # ;
}}}

!Summary

End result: computer model of morphology and morphophonology. This model can
analyse and generate word forms.

!!Sentence level technology

VISLCG3 - xxx

!!!Tools for linguistic research

* explicit grammars
* analysers
* generators
* analysed text
* try out different phonological models of a language
* use model to process (analyse) text

!!Explicit Grammars

* Writing for a computer forces you to be explicit about every aspect of the
  grammar.
* This can bring forth new areas of the grammar to research. Examples from the
  work on the Sámi languages:
** compounding
** derivations
** phonological alternations in Inari Sami
** North Sámi syntax

!!Analysers

* morphological analysers can themselves be used as a tool for resarch (see
  "Analysing text", next)
* a full-size lexicon can be used as source material for lexical research

!!Generators

* morphological generators will ruthlessly display all overgenerations, and thus
  give valuable feedback about the grammar model, and the assumptions built in.

!!Use Model To Process (Analyse) Text

* The most important use of a morphological analyser is to analyse text.
  Together with disambiguation and syntactic analysis, this can be used to
  build an analysed corpus that can be searched for different linguistic
  patterns.

=> Korp (searchable corpus of analysed texts)

[images/Korp.png]

!!!Tools for speakers of minority languages

* keyboards (desktop and mobile, soon with spellers)
* spell checkers
* morphologically aware hyphenators
* morphologically aware dictionaries
* grammar checkers
* MT
* iCALL
* text-to-speech

!!Keyboards
* Desktop (Windows, macOS, Linux/X11)
* Mobile, soon with spellers

!!Spell Checkers
!!Morphologically Aware Hyphenators
!!Morphologically Aware Dictionaries
!!Grammar Checkers
!!Mt
!!Icall
!!Text-To-Speech




