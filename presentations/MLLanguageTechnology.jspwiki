!!!Language technology for low-resource languages

Jack Rueter and Sjur Moshagen

!!!Rule-based language technology

Our rule-based approach:
* two-level morphology (finite state transducers)
* disambiguation using constraint grammar

Both technologies developed here at HU :-)

!!Word-level technology

* Morphophonology:
** twolc (a "variant" of SPE phonology)
** also rewrite rules ("real" SPE phonology)
* Morphology: lexc

Both formalisms should be easily recognisable by linguists.

!Example - twolc

!Example - xfst / rewrite rules

!Example - lexc

!Conclusion

End result: computer model of morphology and morphophonology. This model can analyse and generate word forms.


!!!Tools for linguistic research

* explicit grammars
* analysers
* generators
* analysed text

* try out different phonological models of a language
* use model to process (analyse) text

=> Korp (searchable corpus of analysed texts)


!!!Tools for speakers of minority languages

* keyboards (desktop and mobile, soon with spellers)
* spell checkers
* morphologically aware hyphenators
* morphologically aware dictionaries
* grammar checkers
* MT
* iCALL
* text-to-speech

!!Keyboards
* Desktop (Windows, macOS, Linux/X11)
* Mobile, soon with spellers

!!Spell Checkers
!!Morphologically Aware Hyphenators
!!Morphologically Aware Dictionaries
!!Grammar Checkers
!!Mt
!!Icall
!!Text-To-Speech




