This document contains an overview of the topics and training given in Nuuk in
June, 2017. It contains links to the relevant parts of the existing
documentation. The idea is that this page can be used as an overview document
also in other cases.

Basic organisation: presentation of topic, followed by excercises. Roughly one
topic before lunch and one topic after. Doing real work on each topic is central
to the plan.

Topics:
* presentation of all tools
* introduction to the infrastructure
* dependencies on external tools
* unix crash course
* in-source documentation
* tag conventions in the Giella infrastructure
* morpheme boundaries
* testing
* debugging
* developer tools
* refactoring the code

!!! Presentation Of All Tools

* analysers & generators
* [Korp|http://gtweb.uit.no/korp/]
** infra component: Korpus processing pipeline (converson & analysis)
* dictionaries:
** [NDS|http://sanit.oahpa.no]
** [satni.org|http://satni.org/]
** dictionary content:
*** [$GTHOME/words/dicts/|https://gtsvn.uit.no/langtech/trunk/words/dicts/]
*** [Termwikien|https://satni.uit.no/termwiki/index.php/VÃ¡ldosiidu/nb]
* proofing tools
** spellers [here|http://divvun.no/korrektur/korrektur.html] and
   [here|http://divvun.org/proofing/proofing.html] and
   [here|http://divvun.no/korrektur/speller-demo.html]
** hyphenators
** [grammar checker|http://gtweb.uit.no/gc/]
* [MT|http://jorgal.uit.no/index.sme.html?dir=sme-nob#translation]
* keyboards:
** [mobile phone keyboards|http://divvun.no/keyboards/mobileindex.html]
** [computer system keyboards|http://divvun.no/keyboards/desktopindex.html]
** the keyboards are built automatically from [very simple text
   files|https://gtsvn.uit.no/langtech/trunk/keyboards/smj/smj_NO-mobile.yaml]
* [speech synthesis|http://divvun.no/tale/tale.html]
* language learning:
** [initial training on a mobile app|http://gielese.no/play/]
** [L2 learning|http://oahpa.no]
** [L1 grammar excercises|http://oahpa.no/sme/usevisl/VISL_spealut.nob.html]

!!! Introduction To The Infrastructure

!! Overall goals

* language independent, while still adaptable to the needs of each language
* separation of concerns - build structure vs linguistic work
* scalable:
** add as many languages as you want
** add as many tools as you want
** with a new language, you get whatever all the other languages have
** with a new tool, all languages get a basic version of the tool
* predictable - same thing is called the same in different languages
* understandable - names should be understandable as is
* modular
* technology neutral (but rule-based by default - the only thing that works with
  the languages we work with)
** it supports both Xerox, Hfst and Foma
** it supports Apertium, but could also support other (rule-based) MT systems
* should give strong support to reuse of resources
** shared lexical data
** one fst starting point for every tool

!! Means for achieving the goals

* shared directory structure

!!! Dependencies On External Tools

!!! Unix Crash Course

See [Unix for Linguists|../tools/UnixForLinguists.html]

!!! In-Source Documentation

!!! Tag conventions in the Giella infrastructure

* [Language Independent Tags In The Giella
  Infra|../ling/LanguageIndependentTagsInTheGiellaInfra.html]

!!! Morpheme boundaries

* [Morfeme border markup|../ling/morfem-borders.html]

!!! Testing

!! In-Source

!! Yaml

!!! Debugging

* [Issues in KAL|../lang/kal/IssuesInGreenlandic.html]

!!! Developer Tools

!!! Refactoring the code
